<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
<!--    开启注解扫描，只希望处理service和dao，controller不需要spring框架去做处理-->
    <context:component-scan base-package="com.nuist">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
<!--    Spring 整合Mybatis框架-->
<!--    配置连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <context:property-placeholder location="classpath:jdbcConfig.properties"></context:property-placeholder>
<!--    配置SqlSessionFactory的工厂-->
    <bean id="SqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--    配置Dao接口所在的包-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.nuist.dao"></property>
    </bean>

<!--    配置spring框架声明式事务管理-->
<!--    配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--    配置事务通知-->
<!--    配置事务管理器中的属性
        isolation:用于指定事务的隔离级别，默认值是default，表示使用数据库的默认隔离级别
        propagation:用于指定事务的传播行为，默认值是required，表示一定会有事务，增删改的选择，查询方法可以选择supports
        read-only:用于指定事务是否只读，只有查询方法才能设置为true。默认值是false
        timeout:指定事务的超时时间，默认值是-1，表示永不超时
        rollback-for:用于指定一个异常，当产生改异常时，事务回滚，产生其它异常时，事务不回滚。没有默认值是表示任何异常都回滚
        no-rollback-for:用于指定一个异常，当产生该异常时事务不回滚，产生其它异常时，事务回滚，没有默认值是表示任何异常都回滚
-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="*" isolation="DEFAULT" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
<!--    配置AOP增强-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.nuist.service.impl.*ServiceImpl.*(..))"/>
    </aop:config>
</beans>
